@using Kendo.Mvc.UI
@using VT.Common
@using VT.Web.Models

@{
    ViewBag.Title = "Employees";
    Layout = "~/Views/Shared/LoggedInLayout.cshtml";
    var customIdentity = (CustomIdentity)User.Identity;
    var canSee = (bool)ViewBag.CanSee; 
}

@section PageLevelScripts
{
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/iCheck")
    
    <script src="@Url.Content("~/Scripts/plugins/multiselect-master/js/multiselect.min.js")"></script>
    <script src="@Url.Content("~/Scripts/app/user.js")"></script>

    <script type="text/javascript">
        var userId = '@customIdentity.UserId';

        $('#su_multiselect_from_1').multiselect();

        $('#multiselect_from_1').multiselect();

        function renderCheckBox(item) {

            var id = item.Id.toString();

            if (id == userId) return "";

            return [
                "<input type='checkbox' value='" + item.Id + "' class='i-checks'></input>"
            ].join('');
        }

        function getAdministrator(item) {
            return "<span class='label label-" + (item.IsAdmin == "Yes" ? "primary" : "warning") + "'>" + item.IsAdmin + "</span>";
        }

        function getActionsInfo(item) {
            return [
                "<a class='edit-user " + (item.CompanyId === null ? "hide" : "") + "' data-id='" + item.Id + "' href='#' title='Edit'><i class='fa fa-pencil'></i></a> &nbsp;" +
                "<a class='view-user' data-id='" + item.Id + "' href='#divUserDetails' title='View'><i class='fa fa-eye'></i></a> &nbsp;" +
                "<a class='password-reset' data-id='" + item.Id + "' href='#' title='Password Reset'><i class='fa fa-key'></i></a> &nbsp;" +
                "<a class='customers-permission " + (item.IsAdmin === "Yes" ? "hide" : "") + "'  data-id='" + item.Id + "' href='#' title='Access to Customers'><i class='fa fa-lock'></i></a> "
            ].join('');
        }
    </script> 
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>EMPLOYEES</h2>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>ALL EMPLOYEES</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                @if (canSee)
                {
                    <div class="ibox-content">
                        <div class="">
                            <a data-toggle="modal" href="#modal-add-user-form" id="btnAddUser" class="btn btn-info btn-rounded btn-outline "><i class="fa fa-plus"></i> &nbsp; Add Employee</a>
                            <a href="#modal-form" id="btnDeleteUser" class="btn btn-danger btn-rounded btn-outline"><i class="fa fa-trash"></i> &nbsp; Delete Employee</a>

                            @if (ApplicationSettings.EnableUserImport)
                            {
                                <a data-toggle="modal" href="#modal-import-users" class="btn btn-primary btn-rounded btn-outline pull-right"><i class="fa fa-file-excel-o"></i> &nbsp; Import Employees</a>
                            }
                        </div>

                        @Html.Partial("GridHeader", "UsersListGrid")

                        @(Html.Kendo().Grid<UsersListViewModel>()
                              .Name("UsersListGrid")
                              .Reorderable(x => x.Columns(true))
                              .Pageable(page => page
                                  .Info(true)
                                  .ButtonCount(5)
                                  .Messages(message => message
                                      .Empty("No data")
                                      .Next("Next")
                                      .Previous("Previous")
                                      .First("First")
                                      .Last("Last")
                                  )
                              )
                              .Filterable()
                              .Sortable()
                              .Columns(columns =>
                              {
                                  columns.Bound(x => x.Id).Title("").ClientTemplate("#= renderCheckBox.apply(this,arguments) #").Width(45).Filterable(false);
                                  columns.Bound(x => x.CompanyId).Visible(false);
                                  columns.Bound(x => x.CompanyName).Visible(User.IsInRole(UserRoles.SuperAdmin.ToString())).Title("Organization").Filterable(ftb => ftb.Multi(true));
                                  columns.Bound(x => x.Name).Title("Name");
                                  columns.Bound(x => x.Email).Title("Email");
                                  columns.Template(@<text></text>).Title("Administrator?").ClientTemplate("#= getAdministrator.apply(this, arguments) #");
                                  columns.Template(@<text></text>).Title("Actions").ClientTemplate("#= getActionsInfo.apply(this, arguments) #");
                              })
                              .ToolBar(toolbar =>
                              {
                                  toolbar.Template(@<text>
                            <div class="toolbar">
                                <a href="javascript:void(0)" onclick="return VT.Util.ClearAllKendoGridFilter();" class="btn btn-primary btn-sm btn-rounded">Clear Filters</a>
                            </div>
                                </text>);
                              })
                              .Events(events => events.DataBound("VT.Util.ConnectKendoGrids"))
                              .DataSource(dataSource => dataSource
                                  .Ajax()
                                  .PageSize(10)
                                  .Model(model => model.Id(p => p.Id))
                                  .Read(read => read.Action("UserList", "Users")))
                        )

                        @Html.Partial("ConfirmModal", new ModalViewModal
                   {
                       Id = "delete-user-confirm-modal",
                       IsAlertModel = false,
                       Title = "Delete Employee(s)",
                       Message = "Are you sure you want to delete the selected Employee(s)?"
                   })

                    </div>
                }
                else
                {
                    <div class="ibox-content">
                        <div class="alert alert-danger">
                            @(ViewBag.Message)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row" id="divUserDetails">
        <!--Load dynamic content through ajax-->
    </div>

</div>

<div id="divPasswordReset">
    <!--Load dynamic content through ajax-->
</div>

<div id="divAttachments">
    <!--Load dynamic content through ajax-->
</div>

@Html.Partial("AddUser", new SaveUserModel
{
    CompanyId = customIdentity.CompanyId
})

@Html.Partial("ResetPassword", new PasswordResetModel
{
    //set UserId through ajax
})

@Html.Partial("CustomerAccess", new UserCustomerAccessDetailModel
{
    //set UserId through ajax
})

@Html.Partial("ImportUsers", new ImportUsersModel
{
    CompanyId = customIdentity.CompanyId
})

